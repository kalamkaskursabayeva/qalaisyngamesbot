 # main.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler
)
import logging

TOKEN = "7638033518:AAECvpZhCyRSqetmJbqE8jWHqkjbGHYwOYo"  # Замените на ваш реальный токен

logging.basicConfig(level=logging.INFO)

questions = [
    "Какая самая неловкая ситуация произошла с тобой при незнакомцах?",
    "Какой запах вызывает у тебя ностальгию? Почему именно он?",
    "На какие рискованные поступки (по типу прыжка с парашютом) ты бы решился? Откуда у тебя появилось желание попробовать это?",
    "Какой самый странный сон ты когда-либо видел?",
    "Если бы ты мог есть только одну еду всю жизнь, что бы это было?",
    "Расскажи про свои любимые мультфильмы. Почему они тебе нравятся?",
    "Какой твой любимый мем или шутка?",
    "Если бы ты мог поменяться телами с кем-то на день, кто бы это был?",
    "Какой твой любимый праздник и почему?",
    "Если бы ты выиграл миллион долларов, на что бы ты их потратил?",
    "Какую песню на другом языке ты можешь петь наизусть?",
    "Как ты определяешь успех в жизни? Какое твое самое большое достижение?",
    "Чего ты боишься больше всего?",
    "Какой момент в жизни ты бы хотел прожить снова?",
    "Как ты справляешься с неудачами?",
    "Как ты представляешь свою жизнь через 10 лет?",
    "Какое качество ты больше всего ценишь в людях?",
    "Если бы ты был художником, что бы ты рисовал?",
    "Если бы ты мог создать новый праздник, что бы это было?",
    "Какой музыкальный инструмент ты бы хотел освоить?",
    "Какой вымышленный мир ты бы хотел посетить?",
    "Как ты относишься к искусственному интеллекту?",
    "Стоит ли прощать предательство? Почему так считаешь?",
    "Что важнее в отношениях: доверие или страсть?",
    "В какой исторической эпохе ты бы хотел жить?",
    "Тебе дали возможность выбрать 1 язык, на котором ты можешь говорить свободно. Какой бы это был язык?",
    "Какой твой любимый миф или легенда?",
    "Если бы ты мог изменить одно правило в обществе, что бы это было?",
    "Какой навык ты считаешь самым полезным в жизни?",
    "Если бы ты мог прожить один день в теле животного, кого бы выбрал?",
    "Какой твой любимый способ расслабиться после трудного дня?",
    "Что для тебя важнее: стабильность или спонтанность?",
    "Как ты справляешься с чувством одиночества?",
    "Что бы ты выбрал: петь всё, что говоришь, или танцевать вместо ходьбы?",
    "Кто был твоим примером в детстве и почему?",
    "Что ты понял о себе за последний год?",
    "Когда ты в последний раз чувствовал настоящее вдохновение?",
    "Что тебе даёт ощущение дома?",
    "В чём ты сейчас хочешь стать лучше?",
    "Что бы ты изобрёл, если бы у тебя был неограниченный бюджет?",
    "Какую странную вещь ты хотел бы попробовать хотя бы раз?",
    "Есть ли песни, которые помогали тебе пережить сложные периоды в жизни? Что это за песни и почему именно они?",
    "Живешь ли ты жизнью мечты себя 10 лет назад?",
    "Как ты понимаешь, что больше не хочешь продолжать общение с человеком? После каких фраз/действий?",
    "Что помогает тебе чувствовать себя живым?",
    "Чему ты бы хотел научить своих будущих детей?",
    "Что бы ты хотел отпустить, но пока не можешь?",
    "Если бы ты стал учителем, чему бы ты учил?",
    "Когда ты в последний раз делал что-то впервые?",
    "Что ты однажды понял, и это тебя навсегда изменило?",
    "С кем тебе было легче всего говорить «по душам»?",
    "Какой рекорд Гиннесса ты мог бы установить?",
    "Чем бы ты начал заниматься, если бы знал, что у тебя 100% это получится?",
    "Если бы ты был вирусом, то каким?",
    "Какая комната в доме мечты обязательно должна быть?",
    "Какой магический предмет ты бы хотел иметь?",
    "Что бы ты выбрал: быть всегда прав или всегда любим?",
    "Какая вещь на твоём столе говорит о тебе больше всего?",
    "Что ты сделал по глупости, но не жалеешь?",
    "Что для тебя значит фраза «быть свободным»?",
    "Что бы ты добавил в школьную программу?",
    "Что тебя всегда выручает в неловких ситуациях?",
    "Какой вопрос ты хотел бы задать всему человечеству?",
    "Что ты точно знаешь о себе?",
    "Какое слово ты повторяешь чаще всего?",
    "Что тебе хотелось бы, чтобы люди о тебе знали, но ты не говоришь?",
    "Какую часть своей личности ты прячешь чаще всего?",
    "Что ты понял о себе, только когда потерял кого-то?",
    "Как ты отличаешь настоящую дружбу от временной?",
    "Что для тебя значит “быть услышанным”?",
    "Какой комплимент запомнился тебе на всю жизнь?",
    "Что ты считаешь своей суперсилой в тяжёлые времена?",
    "Когда ты последний раз чувствовал себя уязвимым?",
    "Чему бы ты хотел научиться у своего друга?",
    "Когда ты в последний раз гордился собой?",
    "Если бы тебе дали 30 секунд на ТВ — о чём ты скажешь?",
    "Какую нелепую теорию ты поддерживаешь?",
    "Если бы эмоции были фруктами, какими бы они были?",
    "Какой день недели тебе по характеру?",
    "Расскажи о городе своей мечты. Что там должно быть? Как все расположено и какие есть правила?",
    "Что ты бы хотел забыть, но оно всё еще всплывает?",
    "Как бы мы выжили на необитаемом острове вдвоём?",
    "Если бы дружба стала компьютерной игрой — какой уровень дружбы был бы ваш из 100? Отвечайте одновременно и объясните почему так считаете.",
    "Как бы ты спас мир необычным способом?",
    "Что бы вы кричали, прыгая с парашютом?",
    "Что бы ты выбрал: лгать 24 часа в сутки или говорить только правду? Почему?",
    "Что бы ты хотел пережить с друзьями, чего еще не было?",
    "Если бы ты стал знаменитым, как изменилась бы наша дружба?",
    "Какая фраза друга засела в голове надолго?",
    "Что ты думаешь о дружбе с бывшими?",
    "Как ты чувствуешь, что тебе больше не по пути с человеком?",
    "Какой запах или звук напоминает тебе о конкретном друге?",
    "Как ты понимаешь, что вас уже ничего не связывает?",
    "Что тебе помогает восстанавливать дружбу после ссоры?",
    "С кем из друзей у тебя самое «немолчаливое» молчание?",
    "Какие три слова ты бы написал другу в трудный момент?",
    "Делали тебе больно в дружбе? Были ли у тебя фальшивые друзья? Как ты это понял?",
    "В какой момент ты почувствовал, что повзрослел?",
    "Что тебе сложнее всего принимать в себе — и почему?",
    "С кем ты чувствуешь себя «собой» на 100%?",
    "Какой разговор с другом когда-то изменил твоё мышление?",
    "О чём ты больше всего молчишь, когда тебе плохо?",
    "Каким ты был в момент, когда тебе было по-настоящему хорошо?",
    "Как ты отличаешь душевную близость от поверхностной?",
    "Какие слова тебе однажды хотелось услышать, но ты их не получил?",
    "Что ты хочешь, чтобы другие замечали в тебе чаще?",
    "В чём ты чувствуешь себя уязвимым, даже среди близких?",
    "Когда тебе сложно — кто тот человек, которому ты бы всё рассказал?",
    "Какой твой внутренний конфликт до сих пор не даёт тебе покоя?",
    "Что ты хотел бы вернуть из прошлого, даже если на минуту?",
    "Какая эмоция для тебя самая трудная в проявлении?",
    "Когда ты впервые почувствовал себя по-настоящему одиноким?",
    "Что ты скрываешь за фразой «всё нормально»?",
    "Что ты чаще выбираешь: защитить себя или быть честным до боли?",
    "Есть ли в тебе часть, которую ты боишься показать другим?",
    "Какая ситуация сделала тебя сильнее, но ты не хотел бы её повторить?",
    "Если бы ты мог стереть одно чувство — какое и почему?",
    "Какой страх мешает тебе быть ближе к людям?",
    "В чём ты больше не хочешь себе врать?",
    "Какая твоя уязвимость часто превращается в силу?",
    "Чего ты до сих пор ждёшь, даже если никому об этом не говоришь?",
    "В чём ты бы хотел, чтобы тебя кто-то поддержал, но так и не попросил?",
    "Какой вопрос тебе страшно задать самому себе?",
    "С кем ты не договорил важное?",
    "Как ты понимаешь, что пора идти дальше, даже если больно?",
    "Какая фраза когда-то спасла тебя?"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("Получить скидку -15%", callback_data="discount")],
        [InlineKeyboardButton("Приступить к игре в Дополнение", callback_data="play")],
        [InlineKeyboardButton("Связаться с Тех.поддержкой", callback_data="support")],
        [InlineKeyboardButton("Новости Qalaisyn Games", callback_data="news")],
    ]
    await update.message.reply_text(
        "🎉 Добро пожаловать в Qalaisyn Games!",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data

    if data == "discount":
        products = [
            [InlineKeyboardButton("Укрепление связей", callback_data="game_1")],
            [InlineKeyboardButton("Первая связь", callback_data="game_2")],
            [InlineKeyboardButton("Связь с собой", callback_data="game_3")],
            [InlineKeyboardButton("Өзімен байланыс", callback_data="game_4")],
            [InlineKeyboardButton("Мама, как это было?", callback_data="book_1")],
            [InlineKeyboardButton("Папа, как это было?", callback_data="book_2")],
            [InlineKeyboardButton("Назад", callback_data="back_to_menu")],
        ]
        await query.edit_message_text(
            "У нас сейчас в наличии 4 вида игр и 2 книги. На какой продукт хотели бы получить скидку лояльного клиента?",
            reply_markup=InlineKeyboardMarkup(products)
        )

    elif data.startswith("game") or data.startswith("book"):
        descriptions = {
            "game_1": ("💛 Укрепление связей...", "https://www.instagram.com/p/CpDX0zTjv0C/"),
            "game_2": ("❤️ Первая связь...", "https://www.instagram.com/p/CpNOEKoD2ZK/"),
            "game_3": ("🩵 Связь с собой...", "https://www.instagram.com/p/C8rbgO-IWtC/"),
            "game_4": ("🩵 Өзімен байланыс...", "https://www.instagram.com/reel/C9HvTobseMB/"),
            "book_1": ("🫂 Мама, как это было...", "https://www.instagram.com/p/DHTV9NRtYGT/"),
            "book_2": ("❤️ Папа, как это было...", "https://www.instagram.com/p/DK2REPBo5S7/")
        }
        desc, link = descriptions[data]
        buttons = [
            [InlineKeyboardButton("Смотреть видео-обзор", url=link)],
            [InlineKeyboardButton("Я посмотрел обзор, хочу получить скидку", callback_data="final_discount")],
            [InlineKeyboardButton("Назад", callback_data="discount")],
        ]
        await query.edit_message_text(desc, reply_markup=InlineKeyboardMarkup(buttons))

    elif data == "final_discount":
        await query.edit_message_text(
            "Поздравляю! 🎉\n\nСкидка лояльного клиента получена: -15%\n\nОтправьте скрин этого сообщения в наш Instagram!",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("ОТПРАВИТЬ СКРИНШОТ", url="https://www.instagram.com/qalaisyn.games/")],
                [InlineKeyboardButton("Назад", callback_data="back_to_menu")]
            ])
        )

    elif data == "support":
        await query.edit_message_text(
            "Связаться с менеджером можно по WhatsApp:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("Написать менеджеру", url="https://wa.me/77755007264")],
                [InlineKeyboardButton("Назад", callback_data="back_to_menu")],
            ])
        )

    elif data == "news":
        await query.edit_message_text(
            "Все новости, отзывы и анонсы наших новых продуктов в социальных сетях!\n\nПодпишись, чтобы не пропустить!\n(Эксклюзивные предложения публикуем только в сториз)",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("Instagram Qalaisyn", url="https://www.instagram.com/qalaisyn.games/")],
                [InlineKeyboardButton("Назад", callback_data="back_to_menu")],
            ])
        )

    elif data == "play":
        context.user_data["q_index"] = 0
        question = questions[0]
        keyboard = [
            [InlineKeyboardButton("Следующий вопрос", callback_data="next_q")],
            [InlineKeyboardButton("Назад", callback_data="back_to_menu")],
        ]
        await query.edit_message_text(f"1⃣ Вопрос\n💬 {question}", reply_markup=InlineKeyboardMarkup(keyboard))

    elif data == "next_q":
        q_index = context.user_data.get("q_index", 0) + 1
        if q_index < len(questions):
            context.user_data["q_index"] = q_index
            question = questions[q_index]
            keyboard = [
                [InlineKeyboardButton("Следующий вопрос", callback_data="next_q")],
                [InlineKeyboardButton("Назад", callback_data="back_to_menu")],
            ]
            await query.edit_message_text(f"💬 {question}", reply_markup=InlineKeyboardMarkup(keyboard))
        else:
            await query.edit_message_text(
                "🎉 Это был последний вопрос! Спасибо за игру.",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("Назад", callback_data="back_to_menu")]
                ])
            )

    elif data == "back_to_menu":
        keyboard = [
            [InlineKeyboardButton("Получить скидку -15%", callback_data="discount")],
            [InlineKeyboardButton("Приступить к игре в Дополнение", callback_data="play")],
            [InlineKeyboardButton("Связаться с Тех.поддержкой", callback_data="support")],
            [InlineKeyboardButton("Новости Qalaisyn Games", callback_data="news")],
        ]
        await query.edit_message_text("Вы вернулись в главное меню. Что вас интересует?",
                                      reply_markup=InlineKeyboardMarkup(keyboard))

if __name__ == "__main__":
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button))
    print("Бот запущен...")
    app.run_polling()
